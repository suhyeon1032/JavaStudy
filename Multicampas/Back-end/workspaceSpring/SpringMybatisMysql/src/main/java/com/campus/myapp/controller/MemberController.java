package com.campus.myapp.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
//회원가입, 회원정보수정, 로그인, 로그아웃
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.campus.myapp.service.MemberService;
import com.campus.myapp.vo.MemberVO;

@Controller
@RequestMapping("/member/")
public class MemberController {

   @Inject
   MemberService service;

   // 회원가입 폼으로 이동하는 맵핑
   @GetMapping("memberForm")
   public String memberForm() {
      return "member/memberForm"; // member폴더에 memberForm.jsp파일을 뷰로 사용한다.
   }

   // 회원등록
   @PostMapping("memberOk")
   public String memeberFormOk(MemberVO vo, Model model) {
      // 회원등록
      int cnt = service.memberInsert(vo);

      // 클라이언트 페이지로 insert 과를 보낸다
      model.addAttribute("cnt", cnt);
      return "member/memberResult";
   }

   // 로그인폼으로 이동
   @GetMapping("loginForm")
   public String loginForm() {
      return "member/loginForm";
   }

   // 로그인
   @PostMapping("loginOk")
   public ModelAndView loginOk(MemberVO vo, HttpSession session) {
      // request userid, userpwd와 일치하는 레코드의 userid, username을 선택한다.
      MemberVO vo2 = service.loginCheck(vo);
      ModelAndView mav = new ModelAndView();
      // 로그인 성공 : session에 아이디와 이름을 저장한다. 홈으로이동
      if (vo2 != null) {// 로그인 성공
         session.setAttribute("logId", vo2.getUserid());
         session.setAttribute("logName", vo2.getUsername());
         session.setAttribute("logStatus", "Y");
         // 컨트롤러에서 다른 컨트롤러 매핑주소를 바로 호출한다.
         mav.setViewName("redirect:/");
      } else {// 로그인 실패
         mav.setViewName("redirect:loginForm");
      }
      return mav;
   }

   // 로그아웃
   @GetMapping("logout")
   public ModelAndView logout(HttpSession session) {
      // 세션 객체를 지우면 세션에 저장되어 있는 로그인 정보 등 삭제되고
      // 새로운 세션을 할당한다.
      session.invalidate();
      ModelAndView mav = new ModelAndView();
      mav.setViewName("redirect:/");
      return mav;
   }
   
   //회원정보수정(폼)
   @GetMapping("memberEdit")
   public ModelAndView memberEdit(HttpSession session) {
      String userid = (String)session.getAttribute("logId");
      
      MemberVO vo = service.memberSelect(userid);
      
      ModelAndView mav = new ModelAndView();
      mav.addObject("vo", vo);
      
      mav.setViewName("member/memberEdit");
      return mav;
      
   }
   // 회원정보수정(DB)
   @PostMapping("memberEditOk")
   public ModelAndView memberEditOk() {
	   //
   }
}